from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
import os
import openai

openai.api_key = os.getenv("OPENAI_API_KEY")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup(
    [
        ["üß† –•–æ—á—É —É–ª—É—á—à–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ", "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"],
        ["üí¨ –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"]
    ],
    resize_keyboard=True
)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BioLiferBot!\n–Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–∫–∏, —É–ª—É—á—à–∏—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤–∞—Å –∫ –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.strip()

    if user_message == "üß† –•–æ—á—É —É–ª—É—á—à–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ":
        await update.message.reply_text("–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å —Å–µ–π—á–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç? –°–æ–Ω, —ç–Ω–µ—Ä–≥–∏—è, –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ, –ª–∏–±–∏–¥–æ, —Å—Ç—Ä–µ—Å—Å –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?")

    elif user_message == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –∫—Ä–∞—Ç–∫–æ –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É—é –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç‚Ä¶")

    elif user_message == "üí¨ –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é":
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é 3 —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:\n\n"
            "1Ô∏è‚É£ –ë—ã—Å—Ç—Ä–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äî 10‚Äì15 –º–∏–Ω, –ø–æ–¥–±–æ—Ä –ë–ê–î–æ–≤ –±–µ–∑ –∞–Ω–∞–ª–∏–∑–æ–≤\n"
            "2Ô∏è‚É£ –ì–ª—É–±–æ–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äî —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π\n"
            "3Ô∏è‚É£ –í–µ–¥–µ–Ω–∏–µ ‚Äî –ª–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ–æ—Ä–º—É, —á—Ç–æ–±—ã —è –ø–æ–Ω—è–ª, –∫–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å:\n"
            "üëâ https://docs.google.com/forms/d/e/1FAIpQLSdrkP3pR1ZhBkDLi15YiJCGDhJ0AbwjT9HqCsRRLXJVGUNeUg/viewform?usp=header"
        )

    else:
        await update.message.reply_text("‚åõ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º‚Ä¶")
        try:
            response = openai.ChatCompletion.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –±–∏–æ—Ö–∞–∫–∏–Ω–≥—É –∏ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏–∏. –û—Ç–≤–µ—á–∞–π —Å –ø–æ–ª—å–∑–æ–π, –Ω–æ –º—è–≥–∫–æ –Ω–∞–ø—Ä–∞–≤–ª—è–π –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."},
                    {"role": "user", "content": user_message}
                ]
            )
            answer = response["choices"][0]["message"]["content"]
            await update.message.reply_text(f"{answer}\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äî –Ω–∞–∂–º–∏—Ç–µ üí¨ –•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.")
        except Exception as e:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
def register_handlers(app):
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
